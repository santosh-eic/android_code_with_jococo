name: Jacoco with Java Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  jacoco-java-gradle:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Tests
      run: ./gradlew test

    - name: Run Test Coverage
      run: ./gradlew jacocoTestReport

    # - name: Generate JaCoCo Badge
    #   uses: cicirello/jacoco-badge-generator@v2
    #   with:
    #     generate-branches-badge: true
    #     jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

    - name: Display local test coverage (only API 30)
      id: jacoco
      uses: madrapps/jacoco-report@v1.7.0
      with:
        title: Combined test coverage report
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        paths: |
          ${{ github.workspace }}/**/build/reports/jacoco/**/*Report.xml
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload local coverage reports (XML + HTML)
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        if-no-files-found: error
        compression-level: 1
        overwrite: false
        path: '**/build/reports/jacoco/*' 

    # - name: Cache SonarQube Cloud packages
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.sonar/cache
    #     key: ${{ runner.os }}-sonar
    #     restore-keys: ${{ runner.os }}-sonar

    # - name: Cache Gradle packages
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.gradle/caches
    #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
    #     restore-keys: ${{ runner.os }}-gradle

    # - name: Build and analyze
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: ./gradlew build sonar --info        

    # - name: Set up SonarQube
    #   uses: sonarsource/sonarcloud-github-action@v2
    #   with:
    #     sonar-token: ${{ secrets.SONAR_TOKEN }} # Set this secret in GitHub
    #     organization: santosh-eic # Replace with your SonarQube organization
    #     project-key: santosh-eic_android_code_with_jococo # Replace with your project key
    #     project-name: android_code_with_jococo # Replace with your project name
    - name: Set up SonarQube environment variables
      run: echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> $GITHUB_ENV

    - name: Run SonarQube analysis
      run: ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io # Add your SonarQube server URL

